# -*- coding: utf-8 -*-
"""Simpson_Rule_v1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-q23TLpXNS-Q3Bov13bl2PFon8QyvigT

# <h1 align="center"> Método de Simpson </h1>
#  <h1 align="center"> Aproximación a la Integral </h1>

## Fórmula

\begin{align}
\int_a^b  f(x) \, dx & \approx \frac{\Delta x}{3} \left(f(x_0) + 4f(x_1) + 2f(x_2) + 4f(x_3) + 2f(x_4) + \ldots \\ +  2f(x_{n-2})  +  4f(x_{n-1}) + f(x_n)\right)
\end{align}


### Se considera una partición homogenea del intervalo $[a,b]$, $\Delta x = (b - a)/n$ el tamaño de paso, e $i = 0,1,2 … , n$ ; siendo *n* par.


----
Referencias:
* Stewart  & Kokoska (2023). Calculus Concepts and Canntexts. pág. 495

---

Autor: Roberto Méndez Méndez

Editado: 03 Sep 24   v1
"""

import numpy as np
import matplotlib.pyplot as plt

x0 = 0
xb = 1
n = 10

def f(x):
    #y = np.sqrt(1 + (np.pi*np.cos(np.pi*x/7)/7)**2)
    #y = 1/x
    y = np.exp(x**2)
    return y

t = np.linspace(x0,xb,n+1)

suma = 0
for i in range(n//2):
    suma += f(t[2*i]) + 4*f(t[2*i+1]) + f(t[2*i+2])

dt = t[1] - t[0]
aprox = dt*suma/3

print("La integral aproximada es: ", aprox)